<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>李易峰的女人绝不认输</title>
  
  <subtitle>了了</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-08-27T09:53:29.892Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>了了</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用 Hexo 和 Github 搭建 Next 主题个人博客</title>
    <link href="http://example.com/2021/08/25/hello-world/"/>
    <id>http://example.com/2021/08/25/hello-world/</id>
    <published>2021-08-25T08:53:38.300Z</published>
    <updated>2021-08-27T09:53:29.892Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文详细描述了如何在 Github 上，使用 Hexo 部署博客，并配置个性化 NexT 主题</p></blockquote><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><ul><li><a href="https://nodejs.org/en/">Node.js 官方下载地址</a></li><li><a href="https://blog.csdn.net/qq_40593308/article/details/110559838">Node.js 安装教程</a></li></ul><br><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><ul><li><a href="https://git-scm.com/download">Git 官方下载地址</a></li><li><a href="https://www.jianshu.com/p/414ccd423efc">Git 安装教程</a></li></ul><h3 id="注册-Github-账号"><a href="#注册-Github-账号" class="headerlink" title="注册 Github 账号"></a>注册 Github 账号</h3><ul><li><a href="https://blog.csdn.net/yaorongke/article/details/119086305">教程</a></li><li>输入用户名，Email，密码。比如，我的用户名是：lyfdnrjbrs</li></ul><h3 id="创建博客仓库"><a href="#创建博客仓库" class="headerlink" title="创建博客仓库"></a>创建博客仓库</h3><ul><li><a href="https://blog.csdn.net/weixin_43729943/article/details/103915046">教程</a></li><li>注意，仓库名应该为：<strong>用户名.github.io</strong>。比如，我的仓库名是：<a href="https://lyfdnrjbrs.github.io/"><strong>lyfdnrjbrs.github.io</strong></a></li></ul><h3 id="配置-SSH-Key"><a href="#配置-SSH-Key" class="headerlink" title="配置 SSH Key"></a>配置 SSH Key</h3><ul><li><p>打开 Git Bash 终端</p></li><li><p>设置 user.name 和 user.email</p>  <pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;你的GitHub用户名&quot;git config --global user.email &quot;你的GitHub注册邮箱&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>生成 SSH Key</p>  <pre class="line-numbers language-none"><code class="language-none">ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  此时，在用户文件夹下就会有一个新的文件夹 .ssh，里面有刚刚创建的ssh密钥文件 id_rsa 和 id_rsa.pub</p></li><li><p>获取 SSH Key</p>  <pre class="line-numbers language-none"><code class="language-none">cd ~&#x2F;.sshcat id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>  如下图</p>  <img src="/images/getssh.png" style="margin: 0;">  <br></li><li><p>在 GitHub 中添加 SSH Key</p><ul><li>打开 <a href="https://github.com/"><strong>GitHub</strong></a> 网站，点击头像，选择 <strong>Settings</strong><img src="/images/yhsettings.png" style="margin: 0;"><br></li><li>选择 <strong>SSH and GPG keys</strong>，点击 <strong>New SSH key</strong><img src="/images/newsshkey.png" style="margin: 0;"><br></li><li>将之前获取到的 id_rsa.pub 的内容复制粘贴到 <strong>Key</strong> 文本框中<img src="/images/addsshkey.png" style="margin: 0;"><br></li></ul></li><li><p>测试是否成功配置 SSH Key</p>  <pre class="line-numbers language-none"><code class="language-none">ssh -T git@github.com&#x2F;&#x2F;运行结果出现类似如下Hi lyfdnrjbrs! You&#39;ve successfully authenticated, but GitHub does not provide shell access.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>  如下图</p>  <img src="/images/sshsuccessfully.png" style="margin: 0;">  <br></li></ul><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><ul><li>安装 Hexo 的非常简单, 只要一条命令, 前提是安装好 Node.js 与 Git</li><li>打开 Git Bash 终端，输入命令  <pre class="line-numbers language-none"><code class="language-none">npm install -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><br></li></ul><h1 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h1><h2 id="初始化-Hexo"><a href="#初始化-Hexo" class="headerlink" title="初始化 Hexo"></a>初始化 Hexo</h2><p>打开 Git Bash 终端，输入命令</p><ul><li><p>初始化博客文件夹（我的是在 D 盘创建的 blog，这里可能时间会长些，要耐心等待）</p>  <pre class="line-numbers language-none"><code class="language-none">hexo init &#x2F;d&#x2F;blog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  如下图</p>  <img src="/images/cshblog.png" style="margin: 0;">  <br><p>  初始化成功后生成的一些文件</p>  <img src="/images/cshwjj.png" style="margin: 0;">  <br></li><li><p>切换到博客文件夹</p>  <pre class="line-numbers language-none"><code class="language-none">cd &#x2F;d&#x2F;blog<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>安装插件</p>  <pre class="line-numbers language-none"><code class="language-none">npm install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>安装其它插件</p>  <pre class="line-numbers language-none"><code class="language-none">npm install hexo-server --savenpm install hexo-admin --savenpm install hexo-generator-archive --savenpm install hexo-generator-feed --savenpm install hexo-generator-search --savenpm install hexo-generator-tag --savenpm install hexo-deployer-git --savenpm install hexo-generator-sitemap --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><br><h2 id="本地浏览博客"><a href="#本地浏览博客" class="headerlink" title="本地浏览博客"></a>本地浏览博客</h2><p>第一次使用 hexo，建议先在本地创建服务器使用</p><ul><li><p>继续运行 Git Bash，输入命令</p>  <pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;生成静态页面，可简写为 hexo ghexo generate&#x2F;&#x2F;开启本地服务器，可简写为 hexo shexo server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>  运行成功后会发现提示信息：   </p>  <img src="/images/yxcg.png" style="margin: 0;">  <br><p>  这里有<a href="https://www.jianshu.com/p/7b8faf77d1af"><strong>更多 hexo 常用命令</strong></a> </p></li><li><p>打开浏览器，地址栏中输入：<strong><a href="http://localhost:4000/">http://localhost:4000</a></strong>  ，可以看见刚刚创建的博客</p><blockquote><p>可能出现的问题：访问 <strong><a href="http://localhost:4000/">http://localhost:4000</a></strong>  无反应？</p><blockquote><p>解决方法：可能是由于端口问题引起的。使用 Ctrl+C 中断本地服务，使用命令 <code>hexo s -p 5000</code> 重新开启本地服务，访问 <strong><a href="http://localhost:5000/">http://localhost:5000</a></strong> 就可以看到博客页面了。</p></blockquote></blockquote><p>  <strong>效果图</strong></p>  <img src="/images/cgym.png" style="margin: 0;"></li></ul><br><h2 id="部署到Github上"><a href="#部署到Github上" class="headerlink" title="部署到Github上"></a>部署到Github上</h2><ul><li>打开 blog 根目录下的 <strong>_config.yml</strong> 文件，拖动到底部找到 <strong>deploy</strong> 配置，按照以下格式修改并保存：  <pre class="line-numbers language-none"><code class="language-none"># Deployment## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;one-command-deploymentdeploy:  type: git  repo: git@github.com:lyfdnrjbrd&#x2F;lyfdnrjbrd.github.io.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>注意：<strong>type: git</strong> 中的冒号后面有空格</li><li>注意：将  repo: <a href="mailto:&#103;&#105;&#x74;&#x40;&#103;&#105;&#116;&#104;&#x75;&#98;&#46;&#x63;&#111;&#x6d;">&#103;&#105;&#x74;&#x40;&#103;&#105;&#116;&#104;&#x75;&#98;&#46;&#x63;&#111;&#x6d;</a>:<strong>lyfdnrjbrd/lyfdnrjbrd</strong>.github.io.git 中的用户名换成自己的用户名</li></ul></li></ul><ul><li><p>打开 Git Bash 终端，输入命令</p>  <pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;清空静态页面hexo clean&#x2F;&#x2F;生成静态页面hexo generate&#x2F;&#x2F;部署 hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  以上代码可以简写为</p>  <pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;清除、生成、部署hexo clean &amp;&amp; hexo g -d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><p>注意：第一次发布会提示输入 Github 账号和密码，稍微等待一会，会提示发布成功</p>  <img src="/images/logingithub.png" style="margin: 0;">  <br></li></ul></li><li><p>打开浏览器，地址栏中输入：<strong>http://你的用户名.github.io</strong>。如，我的博客地址是：<strong><a href="http://lyfdnrjbrs.github.io/">http://lyfdnrjbrs.github.io</a></strong></p><br></li></ul><h1 id="NexT-主题"><a href="#NexT-主题" class="headerlink" title="NexT 主题"></a>NexT 主题</h1><h2 id="安装-NexT"><a href="#安装-NexT" class="headerlink" title="安装 NexT"></a>安装 NexT</h2><ul><li><p>打开 Git Bash 终端，输入命令</p>  <pre class="line-numbers language-none"><code class="language-none">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>打开 blog 根目录下的 <strong>_config.yml</strong> 文件，拖动到底部找到 <strong>theme</strong> 配置，按照以下格式修改并保存：</p>  <pre class="line-numbers language-none"><code class="language-none"># Extensions## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;theme: next<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><br><h2 id="配置-NexT"><a href="#配置-NexT" class="headerlink" title="配置 NexT"></a>配置 NexT</h2><p>在 Hexo 中有两份主要的配置文件，其名称一样。为了描述方便，在以下说明中，分别用：</p><blockquote><p>站点配置文件 /blog/_config.yml<br>主题配置文件 /blog/themes/next/_config.yml</p></blockquote><p>区分两个配置文件</p><h3 id="Site-设置"><a href="#Site-设置" class="headerlink" title="Site 设置"></a>Site 设置</h3><p>打开站点配置文件，找到 <code># Site</code>，按照以下说明修改并保存：</p><blockquote><p><code>title: </code>标题，<code>subtitle: </code>副标题，<code>description: </code>简介，<code>keywords: </code>关键词，<code>author: </code>作者，<code>language: </code>语言，zh-CN是简体中文，en是英语，<code>timezone: </code>时区，默认本地时区</p></blockquote><ul><li><p><strong>示例</strong></p>  <pre class="line-numbers language-none"><code class="language-none"># Sitetitle: 标题——了了的个人博客subtitle: 副标题——学习这件事，不是缺乏时间，而是缺乏努力。    description: 简介——我们可以慢慢向前走，但绝对不能后退。    keywords: lyf    author: 作者——了了    language: zh-CN    timezone: &#39;&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>效果图</strong></p>  <img src="/images/sitepz.png" style="margin: 0;">  <br></li></ul><h3 id="翻页（Home-page-setting）设置"><a href="#翻页（Home-page-setting）设置" class="headerlink" title="翻页（Home page setting）设置"></a>翻页（Home page setting）设置</h3><p>打开站点配置文件，找到 <code># Home page setting</code>，按照以下说明修改并保存：</p><blockquote><p><code>path: </code>博客索引页面的根路，默认值：””，<code>per_page: </code>每页显示多少篇博客文章，<code>order_by: </code>文章排序，默认按日期降序</p></blockquote><ul><li><p><strong>示例</strong></p>  <pre class="line-numbers language-none"><code class="language-none"># Home page settingindex_generator:  path: &#39;&#39;  per_page: 10  order_by: -date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="Scheme-设置"><a href="#Scheme-设置" class="headerlink" title="Scheme 设置"></a>Scheme 设置</h3><p>打开主题配置文件，找到 <code># Schemes</code>，将你需用启用的 scheme 前面注释 # 去除即可：</p><blockquote><p>Scheme 为你提供多种不同的外观：<br><code>Muse</code> — 默认值，这是 NexT 最初的版本，黑白主调，大量留白<br><code>Mist</code> — Muse 的紧凑版本，整洁有序的单栏外观<br><code>Pisces</code> — 双栏 Scheme，小家碧玉似的清新<br><code>Gemini</code> — 与 Pisces 类似，灰白分明，轮廓清晰</p></blockquote><ul><li><p><strong><code>scheme: Muse</code> 效果图</strong></p>  <img src="/images/scheme-muse.png" style="margin: 0;">  <br></li><li><p><strong><code>scheme: Mist</code> 效果图</strong></p>  <img src="/images/scheme-mist.png" style="margin: 0;">  <br></li><li><p><strong><code>scheme: Pisces</code> 效果图</strong></p>  <img src="/images/scheme-pisces.png" style="margin: 0;">  <br></li><li><p><strong><code>scheme: Gemini</code> 效果图</strong></p>  <img src="/images/scheme-gemini.png" style="margin: 0;">  <br></li></ul><h3 id="头像设置"><a href="#头像设置" class="headerlink" title="头像设置"></a>头像设置</h3><p>将喜欢的头像图片上传到此目录中 /blog/themes/next/source/images/ ，打开主题配置文件，找到 <code># Sidebar Avatar</code>，按照以下说明修改并保存：</p><blockquote><p><code>url: </code>头像的路径，<code>rounded: </code>设置头像形状，默认false是正方形，true是圆形，<code>rotated: </code>设置鼠标移入头像的动画，默认false是无效果，true是自动旋转</p></blockquote><ul><li><p><strong>示例</strong></p>  <pre class="line-numbers language-none"><code class="language-none"># Sidebar Avataravatar:  url: &#x2F;images&#x2F;Kitty 1.ico  rounded: false  rotated: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>效果图</strong></p>  <img src="/images/xgt-tx.gif" style="margin: 0;">  <br></li></ul><h3 id="网站logo设置"><a href="#网站logo设置" class="headerlink" title="网站logo设置"></a>网站logo设置</h3><p>将喜欢的logo上传到此目录中 /blog/themes/next/source/images/ ，打开主题配置文件，找到 <code>favicon</code>，将值改为相应路径：</p><ul><li><p><strong>示例</strong></p>  <pre class="line-numbers language-none"><code class="language-none">favicon:  small: &#x2F;images&#x2F;flower-16x16.png  medium: &#x2F;images&#x2F;flower-32x32.png  #apple_touch_icon: &#x2F;images&#x2F;apple-touch-icon-next.png  #safari_pinned_tab: &#x2F;images&#x2F;logo.svg  #android_manifest: &#x2F;images&#x2F;manifest.json  #ms_browserconfig: &#x2F;images&#x2F;browserconfig.xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>效果图</strong></p><img src="/images/xgt-logo.png" style="margin: 0;"></li></ul><h3 id="页脚（footer）设置"><a href="#页脚（footer）设置" class="headerlink" title="页脚（footer）设置"></a>页脚（footer）设置</h3><p>打开站点配置文件，找到 <code>footer</code>，按照以下说明修改并保存：</p><blockquote><p><code>since: </code>你博客开始的年份，<code>icon:</code>设置图标，默认是一个小爱心，<code>animated: </code>设置爱心的动画，默认false是无效果，true是跳动，<code>color: </code>设置爱心的颜色，默认红色，<code>copyright:</code>设置作者名字，默认为根目录下 _config.yml 中设置的作者名字，<code>powered:  </code>设置最下面是否显示 Hexo 和 NexT 的版本，true是显示，false是不显示</p></blockquote><ul><li><p><strong>示例</strong></p>  <pre class="line-numbers language-none"><code class="language-none">footer:  since: 2021  icon:    name: fa fa-heart    animated: false    color: &quot;#ff0000&quot;  copyright:  powered: false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>效果图</strong></p>  <img src="/images/xgt-foot.gif" style="margin: 0;">  <br></li></ul><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文详细描述了如何在 Github 上，使用 Hexo 部署博客，并配置个性化 NexT 主题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/</summary>
      
    
    
    
    
  </entry>
  
</feed>
